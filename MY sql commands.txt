create table Videos(video_id int primary key,video_description varchar(200),video_url varchar(200),video_is_active bit not null default 1,start_date date,end_date date);



create table Payment_Type_Master (
	payment_typeid int primary key auto_increment,
	payment_type_desc varchar(100) not null
);





create table Album(album_id int primary key auto_increment,album_name varchar(200) NOT NULL,album_description varchar(200),album_is_active bit default 1 not null,start_date date NOT NULL,end_date date NOT NULL);





create table Image(image_id int primary key auto_increment,image_path varchar(200) not null,image_is_active bit default 1,is_album_cover bit default 1,album_id int not null, foreign key (album_id) references Album(album_id));




create table Staff(staff_id int primary key auto_increment,staff_name varchar(200) not null,photo_url varchar(200),staff_mobile varchar(200),staff_email varchar(200) not null,staff_username varchar(200) not null,staff_password varchar(200) not null);



create table Course(course_id int primary key auto_increment,course_name varchar(200) not null,course_description varchar(200)not null,course_duration int not null,course_fees int not null,course_syllabus text not null,age_grp_type varchar(200) not null,course_is_active bit default 1,cover_photo varchar(200),video_id int,FOREIGN KEY (video_id) REFERENCES Videos(video_id));




CREATE TABLE Batch
(
	batch_id int primary key auto_increment,batch_name varchar(200) NOT NULL,batch_start_time date NOT NULL,
	batch_end_time date NOT NULL,course_id int NOT NULL, FOREIGN KEY(course_id) references Course(course_id),
	 batch_is_active bit default 1, final_presentation_date date

);




create table Student(student_id int  primary key auto_increment , student_name varchar(200) not null, student_address varchar(200)  not null, student_gender varchar(200) not null, photo_url varchar(200) not null, student_dob date not null , student_age int  not null , student_qualification varchar(200) not null, student_mobile varchar(200)  not null,
student_password varchar(200)  not null, student_username varchar(200)  not null, 
batch_id int not null,course_id int not null, FOREIGN KEY (batch_id) REFERENCES Batch(batch_id),FOREIGN KEY (course_id) REFERENCES Course(course_id));






create table PaymentMaster (
	payment_master_id int primary key auto_increment,
	student_id int,
	batch_id int,
	course_fees int not null,
	foreign key (student_id) references Student (student_id),
	foreign key (batch_id) references Batch(batch_id)
);



create table Closure_Reason_Master (Closure_ReasonID int Primary Key auto_increment, Closure_Reason_Desc Varchar(200));




CREATE TABLE Enquiry
(
	enquiry_id int primary key auto_increment,
	enquirer_name varchar(200) not null,
	enquirer_address varchar(200) Not Null,
	enquirer_mobile varchar(200) Not Null,
	enquirer_alternate_mobile varchar(200) Not Null,
	enquirer_email_id varchar(200),
	enquiry_date date Not Null,
	enquirer_query varchar(200),
	closure_reasonID int, Foreign Key(closure_reasonID) references Closure_Reason_Master(Closure_ReasonID),
	closure_reason varchar(200),
	enquiry_processed_flag bit default 0,
	course_id int Not Null, FOREIGN KEY(course_id) references Course(course_id),
	staff_id int NOT Null, FOREIGN KEY(staff_id) references Staff(staff_id),
	Student_Name varchar(200) Not Null,
	enquiry_counter int Not NUll,
	Follow_up date Not Null
);





create table Followup (
	followup_id int primary key,
	enquiry_id int not null,
	staff_id int,
	followup_msg varchar(150),
	is_active bit not null default 0,
	foreign key (enquiry_id) references Enquiry(enquiry_id),
	foreign key (staff_id) references Staff(staff_id)
);







create table Payment (
	payment_id int primary key auto_increment,
	payment_date date,
	payment_done bit default 0,
	payment_receipt_send bit default 0,
	payment_typeid int not null,
	student_id int not null,
	batch_id int not null,
	amount int,
	enquiry_id int,
	foreign key (payment_typeid) references Payment_Type_Master(payment_typeid),
	foreign key (student_id) references Student(student_id),
	foreign key (batch_id) references Batch(batch_id)
);